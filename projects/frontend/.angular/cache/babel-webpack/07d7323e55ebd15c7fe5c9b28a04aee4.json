{"ast":null,"code":"import _asyncToGenerator from \"/home/jagraz29/Workspace/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { gql } from \"apollo-angular\";\nimport axios from 'axios';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"apollo-angular\";\nconst ARTICLES = gql`\n  query ( $query: {String!}!, $type : SearchType!, $first: Int) {\n    search(query: $query, type: $type, first: $first) {\n      edges {\n        node {\n          ... on Repository {\n            url\n            owner {\n              url\n              avatarUrl\n              ... on Organization {\n                avatarUrl\n                name\n                url\n              }\n            }\n            name\n            stargazerCount\n          }\n        }\n      }\n    }\n  }\n`;\nexport class ArticleService {\n  constructor(apollo) {\n    this.apollo = apollo;\n  }\n  getArticles(topic, stars) {\n    return _asyncToGenerator(function* () {\n      const exam = `topic:${topic} stars:>=${stars}`;\n      const resp = yield axios({\n        method: \"post\",\n        url: 'https://api.github.com/graphql',\n        data: ARTICLES,\n        headers: {\n          Authorization: `bearer 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`\n        }\n      });\n      console.log(resp);\n      return resp;\n      // return this.apollo.watchQuery<any>({\n      //   query: ARTICLES,\n      //   variables: {\n      //     $query: `topic:${topic} stars:>=${stars}`,\n      //     type: 'REPOSITORY',\n      //     first: 10,\n      //   },\n      // }).valueChanges;\n    })();\n  }\n}\n\nArticleService.ɵfac = function ArticleService_Factory(t) {\n  return new (t || ArticleService)(i0.ɵɵinject(i1.Apollo));\n};\nArticleService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ArticleService,\n  factory: ArticleService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["gql","axios","i0","i1","ARTICLES","ArticleService","constructor","apollo","getArticles","topic","stars","exam","resp","method","url","data","headers","Authorization","console","log","ɵfac","ArticleService_Factory","t","ɵɵinject","Apollo","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"sources":["/home/jagraz29/Workspace/frontend/src/app/services/articles.service.ts"],"sourcesContent":["import { gql } from \"apollo-angular\";\nimport axios from 'axios';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"apollo-angular\";\nconst ARTICLES = gql `\n  query ( $query: {String!}!, $type : SearchType!, $first: Int) {\n    search(query: $query, type: $type, first: $first) {\n      edges {\n        node {\n          ... on Repository {\n            url\n            owner {\n              url\n              avatarUrl\n              ... on Organization {\n                avatarUrl\n                name\n                url\n              }\n            }\n            name\n            stargazerCount\n          }\n        }\n      }\n    }\n  }\n`;\nexport class ArticleService {\n    constructor(apollo) {\n        this.apollo = apollo;\n    }\n    async getArticles(topic, stars) {\n        const exam = `topic:${topic} stars:>=${stars}`;\n        const resp = await axios({\n            method: \"post\",\n            url: 'https://api.github.com/graphql',\n            data: ARTICLES,\n            headers: {\n                Authorization: `bearer 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`,\n            }\n        });\n        console.log(resp);\n        return resp;\n        // return this.apollo.watchQuery<any>({\n        //   query: ARTICLES,\n        //   variables: {\n        //     $query: `topic:${topic} stars:>=${stars}`,\n        //     type: 'REPOSITORY',\n        //     first: 10,\n        //   },\n        // }).valueChanges;\n    }\n    ;\n}\nArticleService.ɵfac = function ArticleService_Factory(t) { return new (t || ArticleService)(i0.ɵɵinject(i1.Apollo)); };\nArticleService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ArticleService, factory: ArticleService.ɵfac, providedIn: 'root' });\n"],"mappings":";AAAA,SAASA,GAAG,QAAQ,gBAAgB;AACpC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,EAAE,MAAM,eAAe;AACnC,OAAO,KAAKC,EAAE,MAAM,gBAAgB;AACpC,MAAMC,QAAQ,GAAGJ,GAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,OAAO,MAAMK,cAAc,CAAC;EACxBC,WAAW,CAACC,MAAM,EAAE;IAChB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB;EACMC,WAAW,CAACC,KAAK,EAAEC,KAAK,EAAE;IAAA;MAC5B,MAAMC,IAAI,GAAI,SAAQF,KAAM,YAAWC,KAAM,EAAC;MAC9C,MAAME,IAAI,SAASX,KAAK,CAAC;QACrBY,MAAM,EAAE,MAAM;QACdC,GAAG,EAAE,gCAAgC;QACrCC,IAAI,EAAEX,QAAQ;QACdY,OAAO,EAAE;UACLC,aAAa,EAAG;QACpB;MACJ,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;MACjB,OAAOA,IAAI;MACX;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA;EACJ;AAEJ;;AACAP,cAAc,CAACe,IAAI,GAAG,SAASC,sBAAsB,CAACC,CAAC,EAAE;EAAE,OAAO,KAAKA,CAAC,IAAIjB,cAAc,EAAEH,EAAE,CAACqB,QAAQ,CAACpB,EAAE,CAACqB,MAAM,CAAC,CAAC;AAAE,CAAC;AACtHnB,cAAc,CAACoB,KAAK,GAAG,aAAcvB,EAAE,CAACwB,kBAAkB,CAAC;EAAEC,KAAK,EAAEtB,cAAc;EAAEuB,OAAO,EAAEvB,cAAc,CAACe,IAAI;EAAES,UAAU,EAAE;AAAO,CAAC,CAAC"},"metadata":{},"sourceType":"module"}